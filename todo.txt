Core Functionality / Results Interaction:

Sorting Results: The results tree currently appears in the order files were processed. A crucial feature would be the ability to sort the results list based on various criteria like:
File Path (Alphabetical Asc/Desc)
File Size (Asc/Desc)
Date Modified (Asc/Desc)
Match Status (Matched first/last)
Highlighting Matched Terms within Content Preview: While highlight.js provides syntax highlighting, it doesn't seem to specifically highlight the search terms (from the content query) that caused a file to match within the preview pane. This makes it much harder to quickly locate the relevant parts of a matched file.
"Open File" Action: There's no direct way to open a selected file in its default system application (e.g., open a .txt file in Notepad/TextEdit). Users currently have to manually navigate to the file path.
"Open File Location" / "Show in Folder" Action: Similarly, there's no action to directly open the directory containing the selected file in the system's file explorer.
Exporting Only Matched/Selected Results: Currently, "Copy Results" and "Save Results As..." operate on all processed files. Options to export only the files that actually matched the content query, or potentially only user-selected files from the tree, would be very useful.
Search Criteria & Configuration:

Saved Search Configurations (Distinct from History): While search history is present, users might want to save specific, complex search configurations with meaningful names without necessarily running them first, allowing for easy recall of frequently used search setups.
Case Sensitivity for Path/Name Filters: The content query has a case-sensitivity option for simple terms. However, it's unclear if the Exclude Files (glob/regex) or Exclude Folders filters are case-sensitive, or if the initial path/extension matching is. Adding options for case sensitivity in these areas could be beneficial, especially on case-sensitive file systems (Linux).
Whole Word Matching Option: The simple "Term" search finds substrings. An option to match only whole words would refine searches (e.g., searching for "log" wouldn't match "catalog").
UI/UX Enhancements:

File Type Icons: Displaying icons next to file paths in the results tree based on their extension would improve visual scanning.
Selection in Tree View: Allowing users to select multiple items in the results tree (e.g., using Shift-click, Ctrl/Cmd-click) could enable batch operations like copying multiple paths or exporting selected items (if implemented).
Application Level:

Automatic Update Checks: A mechanism to check for new application versions (either automatically or manually triggered) is a standard feature for desktop applications.